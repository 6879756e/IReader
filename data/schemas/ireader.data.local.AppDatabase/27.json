{
  "formatVersion": 1,
  "database": {
    "version": 27,
    "identityHash": "83f3b6d2b2ca655bfce886c3e7ece59a",
    "entities": [
      {
        "tableName": "library",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sourceId` INTEGER NOT NULL, `title` TEXT NOT NULL, `key` TEXT NOT NULL, `author` TEXT NOT NULL, `description` TEXT NOT NULL, `genres` TEXT NOT NULL, `status` INTEGER NOT NULL, `cover` TEXT NOT NULL, `customCover` TEXT NOT NULL, `favorite` INTEGER NOT NULL, `lastUpdate` INTEGER NOT NULL, `lastInit` INTEGER NOT NULL, `dateAdded` INTEGER NOT NULL, `viewer` INTEGER NOT NULL, `flags` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sourceId",
            "columnName": "sourceId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "genres",
            "columnName": "genres",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cover",
            "columnName": "cover",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "customCover",
            "columnName": "customCover",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "favorite",
            "columnName": "favorite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastUpdate",
            "columnName": "lastUpdate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastInit",
            "columnName": "lastInit",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateAdded",
            "columnName": "dateAdded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "viewer",
            "columnName": "viewer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "flags",
            "columnName": "flags",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "catalog",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sourceId` INTEGER NOT NULL, `name` TEXT NOT NULL, `description` TEXT NOT NULL, `pkgName` TEXT NOT NULL, `versionName` TEXT NOT NULL, `versionCode` INTEGER NOT NULL, `lang` TEXT NOT NULL, `pkgUrl` TEXT NOT NULL, `iconUrl` TEXT NOT NULL, `nsfw` INTEGER NOT NULL, PRIMARY KEY(`sourceId`))",
        "fields": [
          {
            "fieldPath": "sourceId",
            "columnName": "sourceId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pkgName",
            "columnName": "pkgName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "versionName",
            "columnName": "versionName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "versionCode",
            "columnName": "versionCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lang",
            "columnName": "lang",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pkgUrl",
            "columnName": "pkgUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "iconUrl",
            "columnName": "iconUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nsfw",
            "columnName": "nsfw",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "sourceId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "category",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `order` INTEGER NOT NULL, `updateInterval` INTEGER NOT NULL, `flags` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updateInterval",
            "columnName": "updateInterval",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "flags",
            "columnName": "flags",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "chapter",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `bookId` INTEGER NOT NULL, `key` TEXT NOT NULL, `name` TEXT NOT NULL, `read` INTEGER NOT NULL, `bookmark` INTEGER NOT NULL, `dateUpload` INTEGER NOT NULL, `dateFetch` INTEGER NOT NULL, `sourceOrder` INTEGER NOT NULL, `content` TEXT NOT NULL, `number` REAL NOT NULL, `translator` TEXT NOT NULL, FOREIGN KEY(`bookId`) REFERENCES `library`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "read",
            "columnName": "read",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bookmark",
            "columnName": "bookmark",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateUpload",
            "columnName": "dateUpload",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateFetch",
            "columnName": "dateFetch",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sourceOrder",
            "columnName": "sourceOrder",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "number",
            "columnName": "number",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "translator",
            "columnName": "translator",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "library",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "download",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chapterId` INTEGER NOT NULL, `bookId` INTEGER NOT NULL, `priority` INTEGER NOT NULL, PRIMARY KEY(`chapterId`), FOREIGN KEY(`chapterId`) REFERENCES `chapter`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "chapterId",
            "columnName": "chapterId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "chapterId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "chapter",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "chapterId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "history",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`bookId` INTEGER NOT NULL, `chapterId` INTEGER NOT NULL, `readAt` INTEGER NOT NULL, `progress` INTEGER NOT NULL, PRIMARY KEY(`bookId`, `chapterId`), FOREIGN KEY(`bookId`) REFERENCES `library`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chapterId",
            "columnName": "chapterId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "readAt",
            "columnName": "readAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "progress",
            "columnName": "progress",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "bookId",
            "chapterId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "library",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "updates",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `chapterId` INTEGER NOT NULL, `bookId` INTEGER NOT NULL, `date` INTEGER NOT NULL, FOREIGN KEY(`bookId`) REFERENCES `library`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chapterId",
            "columnName": "chapterId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "library",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "bookcategory",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`bookId` INTEGER NOT NULL, `categoryId` INTEGER NOT NULL, PRIMARY KEY(`bookId`, `categoryId`), FOREIGN KEY(`bookId`) REFERENCES `library`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`categoryId`) REFERENCES `category`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "bookId",
            "categoryId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "library",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "category",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "categoryId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "theme_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `isDark` INTEGER NOT NULL, `primary` INTEGER NOT NULL, `onPrimary` INTEGER NOT NULL, `primaryContainer` INTEGER NOT NULL, `onPrimaryContainer` INTEGER NOT NULL, `inversePrimary` INTEGER NOT NULL, `secondary` INTEGER NOT NULL, `onSecondary` INTEGER NOT NULL, `secondaryContainer` INTEGER NOT NULL, `onSecondaryContainer` INTEGER NOT NULL, `tertiary` INTEGER NOT NULL, `onTertiary` INTEGER NOT NULL, `tertiaryContainer` INTEGER NOT NULL, `onTertiaryContainer` INTEGER NOT NULL, `background` INTEGER NOT NULL, `onBackground` INTEGER NOT NULL, `surface` INTEGER NOT NULL, `onSurface` INTEGER NOT NULL, `surfaceVariant` INTEGER NOT NULL, `onSurfaceVariant` INTEGER NOT NULL, `surfaceTint` INTEGER NOT NULL, `inverseSurface` INTEGER NOT NULL, `inverseOnSurface` INTEGER NOT NULL, `error` INTEGER NOT NULL, `onError` INTEGER NOT NULL, `errorContainer` INTEGER NOT NULL, `onErrorContainer` INTEGER NOT NULL, `outline` INTEGER NOT NULL, `outlineVariant` INTEGER NOT NULL, `scrim` INTEGER NOT NULL, `bars` INTEGER NOT NULL, `onBars` INTEGER NOT NULL, `isBarLight` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isDark",
            "columnName": "isDark",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.primary",
            "columnName": "primary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.onPrimary",
            "columnName": "onPrimary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.primaryContainer",
            "columnName": "primaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.onPrimaryContainer",
            "columnName": "onPrimaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.inversePrimary",
            "columnName": "inversePrimary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.secondary",
            "columnName": "secondary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.onSecondary",
            "columnName": "onSecondary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.secondaryContainer",
            "columnName": "secondaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.onSecondaryContainer",
            "columnName": "onSecondaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.tertiary",
            "columnName": "tertiary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.onTertiary",
            "columnName": "onTertiary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.tertiaryContainer",
            "columnName": "tertiaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.onTertiaryContainer",
            "columnName": "onTertiaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.background",
            "columnName": "background",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.onBackground",
            "columnName": "onBackground",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.surface",
            "columnName": "surface",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.onSurface",
            "columnName": "onSurface",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.surfaceVariant",
            "columnName": "surfaceVariant",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.onSurfaceVariant",
            "columnName": "onSurfaceVariant",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.surfaceTint",
            "columnName": "surfaceTint",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.inverseSurface",
            "columnName": "inverseSurface",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.inverseOnSurface",
            "columnName": "inverseOnSurface",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.error",
            "columnName": "error",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.onError",
            "columnName": "onError",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.errorContainer",
            "columnName": "errorContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.onErrorContainer",
            "columnName": "onErrorContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.outline",
            "columnName": "outline",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.outlineVariant",
            "columnName": "outlineVariant",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "materialColor.scrim",
            "columnName": "scrim",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "extraColors.bars",
            "columnName": "bars",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "extraColors.onBars",
            "columnName": "onBars",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "extraColors.isBarLight",
            "columnName": "isBarLight",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "reader_theme_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `backgroundColor` INTEGER NOT NULL, `onTextColor` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "backgroundColor",
            "columnName": "backgroundColor",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "onTextColor",
            "columnName": "onTextColor",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '83f3b6d2b2ca655bfce886c3e7ece59a')"
    ]
  }
}