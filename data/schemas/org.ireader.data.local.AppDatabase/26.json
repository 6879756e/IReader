{
  "formatVersion": 1,
  "database": {
    "version": 26,
    "identityHash": "c44af2a330230163ceffd85211ee50c4",
    "entities": [
      {
        "tableName": "library",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sourceId` INTEGER NOT NULL, `title` TEXT NOT NULL, `key` TEXT NOT NULL, `tableId` INTEGER NOT NULL, `type` INTEGER NOT NULL, `author` TEXT NOT NULL, `description` TEXT NOT NULL, `genres` TEXT NOT NULL, `status` INTEGER NOT NULL, `cover` TEXT NOT NULL, `customCover` TEXT NOT NULL, `favorite` INTEGER NOT NULL, `lastUpdate` INTEGER NOT NULL, `lastInit` INTEGER NOT NULL, `dateAdded` INTEGER NOT NULL, `viewer` INTEGER NOT NULL, `flags` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sourceId",
            "columnName": "sourceId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tableId",
            "columnName": "tableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "genres",
            "columnName": "genres",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "cover",
            "columnName": "cover",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "customCover",
            "columnName": "customCover",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "favorite",
            "columnName": "favorite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastUpdate",
            "columnName": "lastUpdate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastInit",
            "columnName": "lastInit",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateAdded",
            "columnName": "dateAdded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "viewer",
            "columnName": "viewer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "flags",
            "columnName": "flags",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "catalog",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sourceId` INTEGER NOT NULL, `name` TEXT NOT NULL, `description` TEXT NOT NULL, `pkgName` TEXT NOT NULL, `versionName` TEXT NOT NULL, `versionCode` INTEGER NOT NULL, `lang` TEXT NOT NULL, `pkgUrl` TEXT NOT NULL, `iconUrl` TEXT NOT NULL, `nsfw` INTEGER NOT NULL, PRIMARY KEY(`sourceId`))",
        "fields": [
          {
            "fieldPath": "sourceId",
            "columnName": "sourceId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pkgName",
            "columnName": "pkgName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "versionName",
            "columnName": "versionName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "versionCode",
            "columnName": "versionCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lang",
            "columnName": "lang",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pkgUrl",
            "columnName": "pkgUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "iconUrl",
            "columnName": "iconUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nsfw",
            "columnName": "nsfw",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "sourceId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "category",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `order` INTEGER NOT NULL, `updateInterval` INTEGER NOT NULL, `flags` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updateInterval",
            "columnName": "updateInterval",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "flags",
            "columnName": "flags",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "chapter",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `bookId` INTEGER NOT NULL, `key` TEXT NOT NULL, `name` TEXT NOT NULL, `read` INTEGER NOT NULL, `bookmark` INTEGER NOT NULL, `dateUpload` INTEGER NOT NULL, `dateFetch` INTEGER NOT NULL, `sourceOrder` INTEGER NOT NULL, `content` TEXT NOT NULL, `number` REAL NOT NULL, `translator` TEXT NOT NULL, FOREIGN KEY(`bookId`) REFERENCES `library`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "read",
            "columnName": "read",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bookmark",
            "columnName": "bookmark",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateUpload",
            "columnName": "dateUpload",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateFetch",
            "columnName": "dateFetch",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sourceOrder",
            "columnName": "sourceOrder",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "number",
            "columnName": "number",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "translator",
            "columnName": "translator",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "library",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "download",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`chapterId` INTEGER NOT NULL, `bookId` INTEGER NOT NULL, `priority` INTEGER NOT NULL, PRIMARY KEY(`chapterId`), FOREIGN KEY(`chapterId`) REFERENCES `chapter`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "chapterId",
            "columnName": "chapterId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "chapterId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "chapter",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "chapterId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "history",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`bookId` INTEGER NOT NULL, `chapterId` INTEGER NOT NULL, `readAt` INTEGER NOT NULL, `progress` INTEGER NOT NULL, PRIMARY KEY(`bookId`, `chapterId`), FOREIGN KEY(`bookId`) REFERENCES `library`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chapterId",
            "columnName": "chapterId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "readAt",
            "columnName": "readAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "progress",
            "columnName": "progress",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "bookId",
            "chapterId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "library",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "updates",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `chapterId` INTEGER NOT NULL, `bookId` INTEGER NOT NULL, `date` INTEGER NOT NULL, FOREIGN KEY(`bookId`) REFERENCES `library`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chapterId",
            "columnName": "chapterId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "library",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "page",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `bookId` INTEGER NOT NULL, `title` TEXT NOT NULL, `sourceId` INTEGER NOT NULL, `prevPage` INTEGER, `nextPage` INTEGER)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sourceId",
            "columnName": "sourceId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "prevPage",
            "columnName": "prevPage",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "nextPage",
            "columnName": "nextPage",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "bookcategory",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`bookId` INTEGER NOT NULL, `categoryId` INTEGER NOT NULL, PRIMARY KEY(`bookId`, `categoryId`), FOREIGN KEY(`bookId`) REFERENCES `library`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`categoryId`) REFERENCES `category`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "bookId",
            "categoryId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "library",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "category",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "categoryId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "theme_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `isDefault` INTEGER NOT NULL, `light-primary` INTEGER NOT NULL, `light-onPrimary` INTEGER NOT NULL, `light-primaryContainer` INTEGER NOT NULL, `light-onPrimaryContainer` INTEGER NOT NULL, `light-inversePrimary` INTEGER NOT NULL, `light-secondary` INTEGER NOT NULL, `light-onSecondary` INTEGER NOT NULL, `light-secondaryContainer` INTEGER NOT NULL, `light-onSecondaryContainer` INTEGER NOT NULL, `light-tertiary` INTEGER NOT NULL, `light-onTertiary` INTEGER NOT NULL, `light-tertiaryContainer` INTEGER NOT NULL, `light-onTertiaryContainer` INTEGER NOT NULL, `light-background` INTEGER NOT NULL, `light-onBackground` INTEGER NOT NULL, `light-surface` INTEGER NOT NULL, `light-onSurface` INTEGER NOT NULL, `light-surfaceVariant` INTEGER NOT NULL, `light-onSurfaceVariant` INTEGER NOT NULL, `light-surfaceTint` INTEGER NOT NULL, `light-inverseSurface` INTEGER NOT NULL, `light-inverseOnSurface` INTEGER NOT NULL, `light-error` INTEGER NOT NULL, `light-onError` INTEGER NOT NULL, `light-errorContainer` INTEGER NOT NULL, `light-onErrorContainer` INTEGER NOT NULL, `light-outline` INTEGER NOT NULL, `light-outlineVariant` INTEGER NOT NULL, `light-scrim` INTEGER NOT NULL, `dark-primary` INTEGER NOT NULL, `dark-onPrimary` INTEGER NOT NULL, `dark-primaryContainer` INTEGER NOT NULL, `dark-onPrimaryContainer` INTEGER NOT NULL, `dark-inversePrimary` INTEGER NOT NULL, `dark-secondary` INTEGER NOT NULL, `dark-onSecondary` INTEGER NOT NULL, `dark-secondaryContainer` INTEGER NOT NULL, `dark-onSecondaryContainer` INTEGER NOT NULL, `dark-tertiary` INTEGER NOT NULL, `dark-onTertiary` INTEGER NOT NULL, `dark-tertiaryContainer` INTEGER NOT NULL, `dark-onTertiaryContainer` INTEGER NOT NULL, `dark-background` INTEGER NOT NULL, `dark-onBackground` INTEGER NOT NULL, `dark-surface` INTEGER NOT NULL, `dark-onSurface` INTEGER NOT NULL, `dark-surfaceVariant` INTEGER NOT NULL, `dark-onSurfaceVariant` INTEGER NOT NULL, `dark-surfaceTint` INTEGER NOT NULL, `dark-inverseSurface` INTEGER NOT NULL, `dark-inverseOnSurface` INTEGER NOT NULL, `dark-error` INTEGER NOT NULL, `dark-onError` INTEGER NOT NULL, `dark-errorContainer` INTEGER NOT NULL, `dark-onErrorContainer` INTEGER NOT NULL, `dark-outline` INTEGER NOT NULL, `dark-outlineVariant` INTEGER NOT NULL, `dark-scrim` INTEGER NOT NULL, `light-extra-bars` INTEGER NOT NULL, `light-extra-onBars` INTEGER NOT NULL, `light-extra-isBarLight` INTEGER NOT NULL, `dark-extra-bars` INTEGER NOT NULL, `dark-extra-onBars` INTEGER NOT NULL, `dark-extra-isBarLight` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isDefault",
            "columnName": "isDefault",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.primary",
            "columnName": "light-primary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.onPrimary",
            "columnName": "light-onPrimary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.primaryContainer",
            "columnName": "light-primaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.onPrimaryContainer",
            "columnName": "light-onPrimaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.inversePrimary",
            "columnName": "light-inversePrimary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.secondary",
            "columnName": "light-secondary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.onSecondary",
            "columnName": "light-onSecondary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.secondaryContainer",
            "columnName": "light-secondaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.onSecondaryContainer",
            "columnName": "light-onSecondaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.tertiary",
            "columnName": "light-tertiary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.onTertiary",
            "columnName": "light-onTertiary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.tertiaryContainer",
            "columnName": "light-tertiaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.onTertiaryContainer",
            "columnName": "light-onTertiaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.background",
            "columnName": "light-background",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.onBackground",
            "columnName": "light-onBackground",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.surface",
            "columnName": "light-surface",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.onSurface",
            "columnName": "light-onSurface",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.surfaceVariant",
            "columnName": "light-surfaceVariant",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.onSurfaceVariant",
            "columnName": "light-onSurfaceVariant",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.surfaceTint",
            "columnName": "light-surfaceTint",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.inverseSurface",
            "columnName": "light-inverseSurface",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.inverseOnSurface",
            "columnName": "light-inverseOnSurface",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.error",
            "columnName": "light-error",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.onError",
            "columnName": "light-onError",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.errorContainer",
            "columnName": "light-errorContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.onErrorContainer",
            "columnName": "light-onErrorContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.outline",
            "columnName": "light-outline",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.outlineVariant",
            "columnName": "light-outlineVariant",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightColor.scrim",
            "columnName": "light-scrim",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.primary",
            "columnName": "dark-primary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.onPrimary",
            "columnName": "dark-onPrimary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.primaryContainer",
            "columnName": "dark-primaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.onPrimaryContainer",
            "columnName": "dark-onPrimaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.inversePrimary",
            "columnName": "dark-inversePrimary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.secondary",
            "columnName": "dark-secondary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.onSecondary",
            "columnName": "dark-onSecondary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.secondaryContainer",
            "columnName": "dark-secondaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.onSecondaryContainer",
            "columnName": "dark-onSecondaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.tertiary",
            "columnName": "dark-tertiary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.onTertiary",
            "columnName": "dark-onTertiary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.tertiaryContainer",
            "columnName": "dark-tertiaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.onTertiaryContainer",
            "columnName": "dark-onTertiaryContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.background",
            "columnName": "dark-background",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.onBackground",
            "columnName": "dark-onBackground",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.surface",
            "columnName": "dark-surface",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.onSurface",
            "columnName": "dark-onSurface",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.surfaceVariant",
            "columnName": "dark-surfaceVariant",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.onSurfaceVariant",
            "columnName": "dark-onSurfaceVariant",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.surfaceTint",
            "columnName": "dark-surfaceTint",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.inverseSurface",
            "columnName": "dark-inverseSurface",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.inverseOnSurface",
            "columnName": "dark-inverseOnSurface",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.error",
            "columnName": "dark-error",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.onError",
            "columnName": "dark-onError",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.errorContainer",
            "columnName": "dark-errorContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.onErrorContainer",
            "columnName": "dark-onErrorContainer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.outline",
            "columnName": "dark-outline",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.outlineVariant",
            "columnName": "dark-outlineVariant",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkColor.scrim",
            "columnName": "dark-scrim",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightExtraColors.bars",
            "columnName": "light-extra-bars",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightExtraColors.onBars",
            "columnName": "light-extra-onBars",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lightExtraColors.isBarLight",
            "columnName": "light-extra-isBarLight",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkExtraColors.bars",
            "columnName": "dark-extra-bars",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkExtraColors.onBars",
            "columnName": "dark-extra-onBars",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "darkExtraColors.isBarLight",
            "columnName": "dark-extra-isBarLight",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "reader_theme_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `backgroundColor` INTEGER NOT NULL, `onTextColor` INTEGER NOT NULL, `isDefault` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "backgroundColor",
            "columnName": "backgroundColor",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "onTextColor",
            "columnName": "onTextColor",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isDefault",
            "columnName": "isDefault",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'c44af2a330230163ceffd85211ee50c4')"
    ]
  }
}